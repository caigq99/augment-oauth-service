# git-cliff 配置文件
# 用于自动生成 CHANGELOG.md

[changelog]
# changelog 头部
header = """
# 更新日志

本文档记录了 Augment OAuth Service 的所有重要更改。

格式基于 [Keep a Changelog](https://keepachangelog.com/zh-CN/1.0.0/)，
并且本项目遵循 [语义化版本](https://semver.org/lang/zh-CN/)。

"""
# changelog 主体模板
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [未发布]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits %}
        - {% if commit.scope %}**{{ commit.scope }}**: {% endif %}{{ commit.message | upper_first }}\
    {% endfor %}
{% endfor %}\n
"""
# 移除重复的 changelog 条目
trim = true
# changelog 底部
footer = """
---

## 版本说明

### 语义化版本格式

版本号格式：`主版本号.次版本号.修订号`

- **主版本号**: 不兼容的 API 修改
- **次版本号**: 向下兼容的功能性新增
- **修订号**: 向下兼容的问题修正

### 更改类型

- **新增**: 新功能
- **改进**: 对现有功能的改进
- **修复**: 问题修复
- **移除**: 移除的功能
- **安全**: 安全相关的修复
- **废弃**: 即将移除的功能
- **文档**: 文档更新
- **重构**: 代码重构
- **测试**: 测试相关更改
- **构建**: 构建系统或外部依赖的更改

### 发布周期

- **主版本**: 根据需要发布，包含重大更改
- **次版本**: 每月发布，包含新功能和改进
- **修订版**: 根据需要发布，主要是问题修复

### 支持政策

- **当前版本**: 完全支持，包含新功能和安全更新
- **前一个主版本**: 安全更新和重要问题修复
- **更早版本**: 不再维护，建议升级
"""

[git]
# 解析提交时忽略合并提交
conventional_commits = true
filter_unconventional = true
split_commits = false
# 提交链接
commit_link_format = "https://github.com/caigq99/augment-oauth-service/commit/{{id}}"
# 比较链接
compare_link_format = "https://github.com/caigq99/augment-oauth-service/compare/{{previous_tag}}..{{current_tag}}"
# 保护分支模式
protect_breaking_commits = false
# 过滤提交
filter_commits = false
# 标签模式
tag_pattern = "v[0-9]*"
# 跳过标签
skip_tags = "v0.1.0-beta.1"
# 忽略标签
ignore_tags = ""
# 日期顺序
topo_order = false
# 排序提交
sort_commits = "oldest"

# 替换提交消息中的问题链接
[[git.commit_preprocessors]]
pattern = "#(\\d+)"
replace = "[#${1}](https://github.com/caigq99/augment-oauth-service/issues/${1})"

# 解析提交消息并分组
[[git.commit_parsers]]
message = "^feat"
group = "新增"

[[git.commit_parsers]]
message = "^fix"
group = "修复"

[[git.commit_parsers]]
message = "^doc"
group = "文档"

[[git.commit_parsers]]
message = "^docs"
group = "文档"

[[git.commit_parsers]]
message = "^perf"
group = "性能"

[[git.commit_parsers]]
message = "^refactor"
group = "重构"

[[git.commit_parsers]]
message = "^style"
group = "样式"

[[git.commit_parsers]]
message = "^test"
group = "测试"

[[git.commit_parsers]]
message = "^chore\\(release\\): prepare for"
skip = true

[[git.commit_parsers]]
message = "^chore\\(deps.*\\)"
group = "依赖"

[[git.commit_parsers]]
message = "^chore\\(pr\\)"
group = "其他"

[[git.commit_parsers]]
message = "^chore\\(pull\\)"
group = "其他"

[[git.commit_parsers]]
message = "^chore|^ci"
group = "其他"

[[git.commit_parsers]]
message = "^stash"
skip = true

[[git.commit_parsers]]
message = "^revert"
group = "回滚"

# 解析 breaking changes
[[git.commit_parsers]]
body = ".*BREAKING CHANGE.*"
group = "⚠️ 破坏性更改"

# 解析作用域
[[git.commit_parsers]]
commit = ".*"
field = "scope"
pattern = "\\(([^)]+)\\)"

[git.tag_parsers]
# 解析标签
message = "^v"
pattern = "^v([0-9]+\\.[0-9]+\\.[0-9]+)"
group = "$1"
